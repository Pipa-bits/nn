{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Felipe\\\\Desktop\\\\Node\\\\gestion-inventario\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { Container } from 'react-bootstrap';\nimport Header from './components/Header';\nimport ProductForm from './components/ProductForm';\nimport ProductList from './components/ProductList';\nimport StatsCards from './components/StatsCards';\nimport Notification from './components/Notification';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // Estados para manejar la aplicación\n  const [inventory, setInventory] = useState([]);\n  const [showForm, setShowForm] = useState(false);\n  const [editingProduct, setEditingProduct] = useState(null);\n  const [viewMode, setViewMode] = useState('cards');\n  const [darkMode, setDarkMode] = useState(false);\n  const [notification, setNotification] = useState(null);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [categoryFilter, setCategoryFilter] = useState('');\n  const [sortOption, setSortOption] = useState('name-asc');\n\n  // Cargar datos al iniciar\n  useEffect(() => {\n    const savedData = localStorage.getItem('inventory_app_data');\n    if (savedData) {\n      setInventory(JSON.parse(savedData));\n    } else {\n      // Datos de ejemplo si no hay nada guardado\n      const sampleData = [{\n        id: 1,\n        name: 'Smartphone X',\n        category: 'electronica',\n        price: 599.99,\n        quantity: 15,\n        location: 'Zona A, Estante 2',\n        barcode: '7222380'\n      }, {\n        id: 2,\n        name: 'Camiseta deportiva',\n        category: 'ropa',\n        price: 24.99,\n        quantity: 30,\n        location: 'Zona B, Estante 3',\n        barcode: '7212480'\n      }, {\n        id: 3,\n        name: 'Arroz integral',\n        category: 'alimentos',\n        price: 3.49,\n        quantity: 50,\n        location: 'Zona C, Estante 1',\n        barcode: '7213650'\n      }, {\n        id: 4,\n        name: 'Sofá de tela',\n        category: 'hogar',\n        price: 299.99,\n        quantity: 5,\n        location: 'Zona D, Estante 1',\n        barcode: '7223460'\n      }];\n      setInventory(sampleData);\n      localStorage.setItem('inventory_app_data', JSON.stringify(sampleData));\n    }\n\n    // Cargar preferencias de vista y modo oscuro\n    const savedView = localStorage.getItem('inventory_view_preference');\n    if (savedView) setViewMode(savedView);\n    const savedDarkMode = localStorage.getItem('darkMode') === 'true';\n    setDarkMode(savedDarkMode);\n  }, []);\n\n  // Guardar en localStorage cuando cambia el inventario\n  useEffect(() => {\n    localStorage.setItem('inventory_app_data', JSON.stringify(inventory));\n  }, [inventory]);\n\n  // Mostrar notificación\n  const showNotification = (message, type) => {\n    setNotification({\n      message,\n      type\n    });\n    setTimeout(() => setNotification(null), 3000);\n  };\n\n  // Funciones CRUD\n  const handleAddProduct = product => {\n    const newProduct = {\n      ...product,\n      id: Date.now()\n    };\n    setInventory([...inventory, newProduct]);\n    showNotification('Producto agregado con éxito', 'success');\n  };\n  const handleUpdateProduct = updatedProduct => {\n    setInventory(inventory.map(p => p.id === updatedProduct.id ? updatedProduct : p));\n    showNotification('Producto actualizado', 'success');\n    setEditingProduct(null);\n  };\n  const handleDeleteProduct = id => {\n    var _inventory$find;\n    const productName = ((_inventory$find = inventory.find(p => p.id === id)) === null || _inventory$find === void 0 ? void 0 : _inventory$find.name) || 'este producto';\n    if (window.confirm(`¿Eliminar \"${productName}\"?`)) {\n      setInventory(inventory.filter(p => p.id !== id));\n      showNotification('Producto eliminado', 'warning');\n    }\n  };\n  const handleEdit = product => {\n    setEditingProduct(product);\n    setShowForm(true);\n    showNotification('Editando producto', 'info');\n  };\n  const toggleDarkMode = () => {\n    const newMode = !darkMode;\n    setDarkMode(newMode);\n    localStorage.setItem('darkMode', newMode);\n  };\n  const toggleView = () => {\n    const newView = viewMode === 'cards' ? 'table' : 'cards';\n    setViewMode(newView);\n    localStorage.setItem('inventory_view_preference', newView);\n  };\n\n  // Filtrar y ordenar productos\n  const filteredProducts = inventory.filter(product => {\n    const matchesSearch = product.name.toLowerCase().includes(searchTerm.toLowerCase()) || product.location.toLowerCase().includes(searchTerm.toLowerCase()) || product.barcode.toLowerCase().includes(searchTerm.toLowerCase());\n    const matchesCategory = !categoryFilter || product.category === categoryFilter;\n    return matchesSearch && matchesCategory;\n  }).sort((a, b) => {\n    switch (sortOption) {\n      case 'name-asc':\n        return a.name.localeCompare(b.name);\n      case 'name-desc':\n        return b.name.localeCompare(a.name);\n      case 'price-asc':\n        return a.price - b.price;\n      case 'price-desc':\n        return b.price - a.price;\n      case 'quantity-asc':\n        return a.quantity - b.quantity;\n      case 'quantity-desc':\n        return b.quantity - a.quantity;\n      default:\n        return 0;\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: darkMode ? 'dark-mode' : '',\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      className: \"app-container\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        onAddProduct: () => setShowForm(true),\n        onToggleView: toggleView,\n        viewMode: viewMode,\n        onToggleDarkMode: toggleDarkMode,\n        darkMode: darkMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-content\",\n        children: [/*#__PURE__*/_jsxDEV(StatsCards, {\n          inventory: inventory\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), showForm && /*#__PURE__*/_jsxDEV(ProductForm, {\n          product: editingProduct,\n          onAdd: handleAddProduct,\n          onUpdate: handleUpdateProduct,\n          onCancel: () => {\n            setShowForm(false);\n            setEditingProduct(null);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ProductList, {\n          products: filteredProducts,\n          viewMode: viewMode,\n          onEdit: handleEdit,\n          onDelete: handleDeleteProduct,\n          searchTerm: searchTerm,\n          onSearchChange: setSearchTerm,\n          categoryFilter: categoryFilter,\n          onCategoryFilterChange: setCategoryFilter,\n          sortOption: sortOption,\n          onSortChange: setSortOption\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), notification && /*#__PURE__*/_jsxDEV(Notification, {\n        message: notification.message,\n        type: notification.type,\n        onClose: () => setNotification(null)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"eS3Pc+6wwZi4MWpq1ap4ApSKqjc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","Container","Header","ProductForm","ProductList","StatsCards","Notification","jsxDEV","_jsxDEV","App","_s","inventory","setInventory","showForm","setShowForm","editingProduct","setEditingProduct","viewMode","setViewMode","darkMode","setDarkMode","notification","setNotification","searchTerm","setSearchTerm","categoryFilter","setCategoryFilter","sortOption","setSortOption","savedData","localStorage","getItem","JSON","parse","sampleData","id","name","category","price","quantity","location","barcode","setItem","stringify","savedView","savedDarkMode","showNotification","message","type","setTimeout","handleAddProduct","product","newProduct","Date","now","handleUpdateProduct","updatedProduct","map","p","handleDeleteProduct","_inventory$find","productName","find","window","confirm","filter","handleEdit","toggleDarkMode","newMode","toggleView","newView","filteredProducts","matchesSearch","toLowerCase","includes","matchesCategory","sort","a","b","localeCompare","className","children","fluid","onAddProduct","onToggleView","onToggleDarkMode","fileName","_jsxFileName","lineNumber","columnNumber","onAdd","onUpdate","onCancel","products","onEdit","onDelete","onSearchChange","onCategoryFilterChange","onSortChange","onClose","_c","$RefreshReg$"],"sources":["C:/Users/Felipe/Desktop/Node/gestion-inventario/src/App.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { Container } from 'react-bootstrap';\nimport Header from './components/Header';\nimport ProductForm from './components/ProductForm';\nimport ProductList from './components/ProductList';\nimport StatsCards from './components/StatsCards';\nimport Notification from './components/Notification';\nimport './App.css';\n\nfunction App() {\n  // Estados para manejar la aplicación\n  const [inventory, setInventory] = useState([]);\n  const [showForm, setShowForm] = useState(false);\n  const [editingProduct, setEditingProduct] = useState(null);\n  const [viewMode, setViewMode] = useState('cards');\n  const [darkMode, setDarkMode] = useState(false);\n  const [notification, setNotification] = useState(null);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [categoryFilter, setCategoryFilter] = useState('');\n  const [sortOption, setSortOption] = useState('name-asc');\n\n  // Cargar datos al iniciar\n  useEffect(() => {\n    const savedData = localStorage.getItem('inventory_app_data');\n    if (savedData) {\n      setInventory(JSON.parse(savedData));\n    } else {\n      // Datos de ejemplo si no hay nada guardado\n      const sampleData = [\n        { id: 1, name: 'Smartphone X', category: 'electronica', price: 599.99, quantity: 15, location: 'Zona A, Estante 2', barcode: '7222380' },\n        { id: 2, name: 'Camiseta deportiva', category: 'ropa', price: 24.99, quantity: 30, location: 'Zona B, Estante 3', barcode: '7212480' },\n        { id: 3, name: 'Arroz integral', category: 'alimentos', price: 3.49, quantity: 50, location: 'Zona C, Estante 1', barcode: '7213650' },\n        { id: 4, name: 'Sofá de tela', category: 'hogar', price: 299.99, quantity: 5, location: 'Zona D, Estante 1', barcode: '7223460' }\n      ];\n      setInventory(sampleData);\n      localStorage.setItem('inventory_app_data', JSON.stringify(sampleData));\n    }\n\n    // Cargar preferencias de vista y modo oscuro\n    const savedView = localStorage.getItem('inventory_view_preference');\n    if (savedView) setViewMode(savedView);\n    const savedDarkMode = localStorage.getItem('darkMode') === 'true';\n    setDarkMode(savedDarkMode);\n  }, []);\n\n  // Guardar en localStorage cuando cambia el inventario\n  useEffect(() => {\n    localStorage.setItem('inventory_app_data', JSON.stringify(inventory));\n  }, [inventory]);\n\n  // Mostrar notificación\n  const showNotification = (message, type) => {\n    setNotification({ message, type });\n    setTimeout(() => setNotification(null), 3000);\n  };\n\n  // Funciones CRUD\n  const handleAddProduct = (product) => {\n    const newProduct = { ...product, id: Date.now() };\n    setInventory([...inventory, newProduct]);\n    showNotification('Producto agregado con éxito', 'success');\n  };\n\n  const handleUpdateProduct = (updatedProduct) => {\n    setInventory(inventory.map(p => p.id === updatedProduct.id ? updatedProduct : p));\n    showNotification('Producto actualizado', 'success');\n    setEditingProduct(null);\n  };\n\n  const handleDeleteProduct = (id) => {\n    const productName = inventory.find(p => p.id === id)?.name || 'este producto';\n    if (window.confirm(`¿Eliminar \"${productName}\"?`)) {\n      setInventory(inventory.filter(p => p.id !== id));\n      showNotification('Producto eliminado', 'warning');\n    }\n  };\n\n  const handleEdit = (product) => {\n    setEditingProduct(product);\n    setShowForm(true);\n    showNotification('Editando producto', 'info');\n  };\n\n  const toggleDarkMode = () => {\n    const newMode = !darkMode;\n    setDarkMode(newMode);\n    localStorage.setItem('darkMode', newMode);\n  };\n\n  const toggleView = () => {\n    const newView = viewMode === 'cards' ? 'table' : 'cards';\n    setViewMode(newView);\n    localStorage.setItem('inventory_view_preference', newView);\n  };\n\n  // Filtrar y ordenar productos\n  const filteredProducts = inventory\n    .filter(product => {\n      const matchesSearch = product.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n        product.location.toLowerCase().includes(searchTerm.toLowerCase()) ||\n        product.barcode.toLowerCase().includes(searchTerm.toLowerCase());\n      const matchesCategory = !categoryFilter || product.category === categoryFilter;\n      return matchesSearch && matchesCategory;\n    })\n    .sort((a, b) => {\n      switch (sortOption) {\n        case 'name-asc': return a.name.localeCompare(b.name);\n        case 'name-desc': return b.name.localeCompare(a.name);\n        case 'price-asc': return a.price - b.price;\n        case 'price-desc': return b.price - a.price;\n        case 'quantity-asc': return a.quantity - b.quantity;\n        case 'quantity-desc': return b.quantity - a.quantity;\n        default: return 0;\n      }\n    });\n\n  return (\n    <div className={darkMode ? 'dark-mode' : ''}>\n      <Container fluid className=\"app-container\">\n        <Header\n          onAddProduct={() => setShowForm(true)}\n          onToggleView={toggleView}\n          viewMode={viewMode}\n          onToggleDarkMode={toggleDarkMode}\n          darkMode={darkMode}\n        />\n        \n        <div className=\"main-content\">\n          <StatsCards inventory={inventory} />\n          \n          {showForm && (\n            <ProductForm\n              product={editingProduct}\n              onAdd={handleAddProduct}\n              onUpdate={handleUpdateProduct}\n              onCancel={() => {\n                setShowForm(false);\n                setEditingProduct(null);\n              }}\n            />\n          )}\n          \n          <ProductList\n            products={filteredProducts}\n            viewMode={viewMode}\n            onEdit={handleEdit}\n            onDelete={handleDeleteProduct}\n            searchTerm={searchTerm}\n            onSearchChange={setSearchTerm}\n            categoryFilter={categoryFilter}\n            onCategoryFilterChange={setCategoryFilter}\n            sortOption={sortOption}\n            onSortChange={setSortOption}\n          />\n        </div>\n        \n        {notification && (\n          <Notification\n            message={notification.message}\n            type={notification.type}\n            onClose={() => setNotification(null)}\n          />\n        )}\n      </Container>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}